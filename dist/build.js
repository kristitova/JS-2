(()=>{"use strict";Vue.component("goods-list",{props:["goods"],template:'\n        <div class="goods-list">\n            <goods-item v-for="goodEntity in goods" :goodProp="goodEntity"></goods-item>\n        </div>\n    '}),Vue.component("goods-item",{props:["goodProp"],methods:{async addToCart(){await fetch("http://localhost:3000/addToCart",{method:"POST",mode:"cors",headers:{"Content-Type":"application/json;charset=utf-8"},body:JSON.stringify(this.goodProp)})}},template:'\n        <div class="goods-item">\n            <h3>Название товара: <br>{{goodProp.product_name}}</h3>\n            <p>Цена: <br>{{goodProp.price}}</p>\n            <button class="goods-item__add" type="button" @click=addToCart>Добавить в корзину</button>\n        </div>\n    '}),Vue.component("search",{data:()=>({search:""}),template:'\n                <div>\n                    <input type="text" class="goods-search"  v-model="search"/>\n                    <button class="search-button" type="button" v-on:click="searching">Искать</button>\n                </div>\n            ',methods:{searching(){this.$emit("searching",this.search)}}}),Vue.component("cart-list",{props:["cartgoods"],template:'\n        <div class="cart-list notVisible">\n            <h3 class="cart-name">Корзина</h3>\n            <cart-item v-for="cartEntity in cartgoods" :cartItem="cartEntity"></cart-item>\n        </div>\n    '}),Vue.component("cart-item",{props:["cartItem"],methods:{async deletefromcart(){await fetch("http://localhost:3000/deletefromcart",{method:"POST",mode:"cors",headers:{"Content-Type":"application/json;charset=utf-8"},body:JSON.stringify(this.cartItem)}),this.$root.cartdisplay()}},template:'\n        <div class="cart-item">\n            <h3>Название товара: <br>{{cartItem.product_name}}</h3>\n            <p>Цена: <br>{{cartItem.price}}</p>\n            <p>Количество: <br>{{cartItem.quantity}}</p>\n            <button class="goods-item__delete" type="button" @click=deletefromcart>Удалить из корзины</button>\n\n        </div>\n    '}),Vue.component("cart-display",{data:()=>({cartgoods:[]}),template:'\n        <button class="cart-button" type="button" v-on:click="getcart">Корзина</button>\n    ',methods:{getcart(){this.$emit("getcart",this.cartgoods)}}}),Vue.component("error_server",{props:["error_s"],template:'\n    <div>\n        <h3 class="error_server" v-if="error_s" >Ошибка при соединении с сервером</h3>\n    </div>\n    '}),new Vue({el:"#app",data:{goods:[],filteredGoods:[],cartList:[],error_s:!1},methods:{async getProducts(){const t=await fetch("http://localhost:3000/catalogData");if(t.ok){const e=await t.json();this.goods=e,this.filteredGoods=e}else alert("Ошибка при соединении с сервером")},async cartdisplay(){const t=await fetch("http://localhost:3000/cartData");if(t.ok){const e=await t.json();this.cartList=e,0!=this.cartList.length?(document.querySelector(".goods-list").classList.add("notVisible"),document.querySelector(".cart-list").classList.remove("notVisible")):(document.querySelector(".goods-list").classList.add("notVisible"),document.querySelector(".cart-name").classList.add("notVisible"),document.querySelector(".goods-list").insertAdjacentHTML("afterend","<h3>Товаров в корзине нет</h3>"))}else alert("Ошибка при соединении с сервером")},filterGoods(t){const e=new RegExp(t,"i");return this.filteredGoods=this.goods.filter((t=>e.test(t.product_name))),0!=this.filteredGoods.length?this.filteredGoods:(document.querySelector("header").classList.add("notVisible"),document.querySelector(".goods-list").insertAdjacentHTML("afterend","<h3>Нет данных</h3>"))}},async mounted(){await this.getProducts()}})})();